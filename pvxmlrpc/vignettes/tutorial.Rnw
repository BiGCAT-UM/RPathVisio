\documentclass[12pt]{article}

\usepackage[utf8]{inputenc}

\title{A RPathVisio Tutorial}
\author{
  Egon Willighagen
}
\date{\today}

\begin{document}
\maketitle

\section{Introduction}

This tutorial will talk you try the basic RPathVisio commands. RPathVisio is a package that allows
you to interact with PathVisio \cite{VanIersel2008} from within R. It uses XML-RPC as communication layer in this process
and requires a running PathVisio-RPC server.

\section{Running the server}

Running the server on the default port can be performed from within R:

<<>>=
library(pvxmlrpc)
port = pathvisioServer()
cat(paste("Port:", port, "\n"))
@

\section{XML-RPC}

This package uses the XML-RPC extension of PathVisio to interact with it. Therefore, you can use
the normal XML-RPC code. However, we decided to provide a number of convenience methods to hide
the more technical aspects of this communication, and make some reasonable assumptions for default
values. Therefore, the following two commands are equivalent.

<<>>=
pathway = createPathway("Test pathway", author="Jan Janssen")
pathway = xml.rpc(
  "http://localhost:9000/",
  "PathVisio.createPathway",
  "Jan Janssen", "Test pathway", "Homo Sapiens"
)
@

You decide what approach you prefer to use.

\subsection{Server and port}

This requires the port it runs on to be free. Need you use a different port,
than you can use the \emph{port} parameter:

<<>>=
port = pathvisioServer(port=8080)
cat(paste("Port:", port, "\n"))
@

The advantage of using the default port, is that the other methods will accept those default
so that you do not have to give them explicitly. If you run your PathVisio-RPC server on a different
machine, or if you use a non-default port, you can use the \textit{host} and \textit{port} parameters
available for all methods.

\section{First Steps}

\subsection{Creating pathways}

The pathway is the central object in PathVisio. Any thing, metabolite, protein, gene, etc, are
contained in a pathway. Therefore, the first thing to do is create a pathway. This can be done with:

<<>>=
pathway = createPathway("Test pathway")
@

Optionally, you can provide author information:

<<>>=
pathway = createPathway("Test pathway", author="Jan Janssen")
@

Note that these pathways are stored as GPML files in the working directory.

\subsection{Adding content}

Next thing is to add content to the pathway. The central piece of content in a pathway is a data node,
which must have a name and a type:

<<>>=
n1 = addDataNode(pathway, "SomeGene", "GeneProduct")
@

Possible types are \textit{Metabolite}, \textit{Protein}, \textit{GeneProduct}, \textit{RNA}, and \textit{Pathway}.
The last one is for refering to related pathways.

Making connections between nodes define the paths of the pathway, and is done with the
\textit{addLine} method.

<<>>=
pathway = "Butyrate"
createPathway(pathway)
addDataNode(pathway, "Acetoacetate", "Metabolite")
addDataNode(pathway, "3-Hydroxy-butyrate", "Metabolite")
addLine(pathway, "A->B", "Acetoacetate", "3-Hydroxy-butyrate")
@

\subsection{Convenience methods}

To further simply the R code to create pathways, we have added methods specific for the
various data node types. For example, we can also add a metabolite with:

<<>>=
addMetaboliteNode(pathway, "Acetoacetate")
@

\section{Creating graphics}

But of course it is all about the looks. For example, we can plot pathways from Wikipathways \cite{Pico2008} in R with:

<<wp2366,include=false,width=6,height=6>>=
plotWikipathway("WP2366")
@

The result is shown in Figure \ref{fig:wp2366}.

\begin{figure}[ht]
\centering
<<fig=true,echo=FALSE>>=
<<wp2366>>
@
\caption{WikiPathways WP2366.}
\label{fig:wp2366}
\end{figure}

\section{Mapping experimental data}

\section{MIM Interactions}

\bibliographystyle{abbrv}
\bibliography{tutorial}


\end{document}
